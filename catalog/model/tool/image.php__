<?php
    class ModelToolImage extends Model {
	public function resize($filename, $width, $height) {
            if (!is_file(DIR_IMAGE . $filename)) {
                return;
            }

            $extension = pathinfo($filename, PATHINFO_EXTENSION);

            if (strtolower($extension) == 'svg') {
                $new_image = $filename;
            } else {

                $old_image = $filename;
                $new_image = 'cache/' . utf8_substr($filename, 0, utf8_strrpos($filename, '.')) . '-' . $width . 'x' . $height . '.' . $extension;
                $image_new_webp = 'cachewebp/' . utf8_substr($filename, 0, utf8_strrpos($filename, '.')) . '-' . (int)$width . 'x' . (int)$height . '.webp'; 

                // Постепенное Обновление кеша
                // Выставляем дату - все кешированные фоты до которой нужно обновить.
                $cacheupdate=strtotime('2018-03-12');
                // ---------------------------------
                if (!is_file(DIR_IMAGE . $new_image) || (filectime(DIR_IMAGE . $new_image) < $cacheupdate) || (filectime(DIR_IMAGE . $old_image) > filectime(DIR_IMAGE . $new_image))) {
                    $path = '';

                    $directories = explode('/', dirname(str_replace('../', '', $new_image)));

                    foreach ($directories as $directory) {
                        $path = $path . '/' . $directory;

                        if (!is_dir(DIR_IMAGE . $path)) {
                                @mkdir(DIR_IMAGE . $path, 0777);
                        }
                    }

                    list($width_orig, $height_orig) = getimagesize(DIR_IMAGE . $old_image);

                    if (($width_orig != $width || $height_orig != $height)) {
                        $image = new Image(DIR_IMAGE . $old_image);
                        $image->resize($width, $height);
                        
                        // 
                        $image->save(DIR_IMAGE . $new_image);
                    } else {
                        copy(DIR_IMAGE . $old_image, DIR_IMAGE . $new_image);
                    }
                }

                 if (!is_file(DIR_IMAGE . $image_new_webp) || (filectime(DIR_IMAGE . $new_image) > filectime(DIR_IMAGE . $image_new_webp))) {

                    $path = '';

                    $directories = explode('/', dirname($image_new_webp));

                    foreach ($directories as $directory) {
                        $path = $path . '/' . $directory;

                        if (!is_dir(DIR_IMAGE . $path)) {
                            @mkdir(DIR_IMAGE . $path, 0777);
                        }
                    }
            
                    $command = "cwebp -q 90 '" . DIR_IMAGE . $new_image . "' -o '". DIR_IMAGE . $image_new_webp . "'";
                    exec($command);
                }

                $imagepath_parts = explode('/', $new_image);
                $new_image = implode('/', array_map('rawurlencode', $imagepath_parts));
            }

            if ($this->request->server['HTTPS']) {
                return $this->config->get('config_ssl') . 'image/' . $new_image;
            } else {
                return $this->config->get('config_url') . 'image/' . $new_image;
            }
	}
    }
